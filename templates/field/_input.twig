{% if name is defined and name %}
	<input type="hidden" name="{{ name }}" value="">
	<input type="hidden" id="cropAssets-{{ fieldId }}" name="cropassets[{{ fieldId }}]" value="{{ cropAsset.id }}">
{% endif -%}

{% set elements = (elements is defined ? elements : []) -%}
{% set jsClass = (jsClass is defined and jsClass ? jsClass : 'Craft.BaseElementSelectInput') -%}
{% set sources = (sources is defined and sources ? sources : null) -%}
{% set criteria = (criteria is defined and criteria ? criteria : null) -%}
{% set storageKey = (storageKey is defined and storageKey ? storageKey : null) -%}

<div id="{{ id }}"
	data-cropassets-field-id="{{ ('cropAssets-' ~ fieldId)|namespaceInputId }}"
	data-field-id="{{ fieldId }}"
	data-aspectratio="{{ aspectRatio }}"
	class="elementselect cropassets">
	<div class="elements">
		{% for element in elements %}
			{% include "_elements/element" with {
				context: 'field',
				size: (viewMode == 'large' ? 'large' : 'small')
			} %}
		{% endfor %}
	</div>

	<div class="btn add icon dashed">{{ selectionLabel }}</div>
</div>

{% includejsresource "cropassets/lib/cropperjs/dist/cropper.js" %}
{% includecssresource "cropassets/lib/cropperjs/dist/cropper.css" %}
{% includejsresource "cropassets/js/cropper.js" %}

{% includejs %}
	new {{ jsClass }}({
        id: "{{ id|namespaceInputId }}",
        name: "{{ name|namespaceInputName }}",
        elementType: "{{ elementType.getClassHandle() }}",
        sources: {{ sources|json_encode|raw }},
        criteria: {{ criteria|json_encode|raw }},
        sourceElementId: "{{ sourceElementId }}",
        viewMode: "{{ viewMode }}",
        limit: "{{ limit }}",
        modalStorageKey: "{{ storageKey }}",
        fieldId: "{{ fieldId }}",
        onSelectElements: function(elements) {
            CropAssets.initCropper(elements[0].id, '{{ aspectRatio }}', '{{ fieldId }}', '{{ ("cropAssets-" ~ fieldId)|namespaceInputId }}');
			CropAssets.applyContextMenu();
        }
    });
	Craft.translations['Crop asset'] = "{{ 'Crop asset'|t }}";
{% endincludejs %}
